apply from: 'versions.gradle'

repositories {
    mavenCentral()
}

apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'maven'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

eclipse.wtp.facet {
    facets = []
    facet name: 'jst.web', version: '2.4'
    facet name: 'java', version: '1.8'
    facet name: 'wst.jsdt.web', version: '1.0'
    facet name: 'jst.java', version: '8.0'
}

checkstyle {
    toolVersion = "6.7"
    configFile = rootProject.file('checkstyle.xml')
}

jacoco {
    toolVersion = "0.7.1.201405082137"
}

// By Default add src/main/webapp as src folder for easy access in IDE
sourceSets.main.java.srcDir 'src/main/webapp'

group = 'net.chh'

description = "angular2 Spring"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    test {
        resources.srcDirs = ["src/test/resources"]
    }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.'spring-boot'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: versions.springSecurity
    compile group: 'org.slf4j', name: 'slf4j-api', version: versions.slf4j
    compile group: 'com.google.guava', name: 'guava', version: versions.guava
    compile group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.jclSlf4j


    testCompile group: 'junit', name: 'junit', version: versions.junit
    testCompile group: 'org.springframework', name: 'spring-test', version: versions.spring
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.'spring-boot'
    testCompile group: 'org.mockito', name: 'mockito-all', version: versions.mockito
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: versions.junitParams
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: versions.javaxServletApi
    providedCompile group: 'javax.servlet', name: 'jsp-api', version: versions.jspApi
}

// Deploy the war into Tomcat
task deployToTomcat(type: Copy, dependsOn: build) {
    from war.archivePath
    into "$System.env.CATALINA_HOME/webapps/"
    rename '.*.war', 'ul-xtrain.war'
}

jettyRun{
    httpPort = 8082
}

jettyRunWar{
    httpPort = 8082
}
